<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.whalefall.mapper.BlogMapper">
    <insert id="addBlog" parameterType="blog">
        insert into blog (id, title, author, create_time, views)
        values (#{id}, #{title}, #{author}, #{createTime}, #{views});
    </insert>

    <sql id="if-title-author">
        <if test="title != null">
            and title = #{title}
        </if>
        <if test="author != null">
            and author = #{author}
        </if>
    </sql>

    <!--使用 if 先判断，再进行条件拼接  使用where 标签代替 where-->
    <select id="queryBlogIf" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <include refid="if-title-author"></include>
        </where>

    </select>

    <select id="queryBlogChoose" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <choose>
                <when test="title != null">
                    title = #{title}
                </when>
                <when test="author != null">
                    /*第一个条件不用加 and 后续的条件要加and,如果第一个不成立，因为有where
                    会自动的将and去掉 */
                    and author = #{author}
                </when>
                <otherwise>
                    and views = #{views }
                </otherwise>
            </choose>
        </where>
    </select>

    <!--注意set是用的逗号隔开-->
    <update id="updateBlog" parameterType="map">
        update blog
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="author != null">author = #{author}</if>
        </set>
        where id = #{id};
    </update>

    <!--
     在动态sql中，所有的where都使用where标签来代替
     SELECT * FROM blog WHERE 1=1 AND (id=1 or id=2 or id=3)
     由于WHERE的智能性，不需要处理WHERE1=1，直接从后边开始，注意(前有and
     并且如果and出现在最前边，会自动去掉

    我们传入的是一个万能的map，这个map中存在一个集合ids,里边保存着我们要遍历的集合
    <foreach collection="ids" item="id" open="and (" close=")" separator="or">
        id = #{id}
    </foreach>
    -->
    <select id="queryBlogForeach" parameterType="map" resultType="blog">
        select * from blog
        <where>
            <foreach collection="ids" item="id" open="and (" close=")" separator="or">
                id = #{id}
            </foreach>
        </where>
    </select>
</mapper>

